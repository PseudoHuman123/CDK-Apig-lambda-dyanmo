Resources:
  UserTableBD4BF69E:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Cdk2Stack/UserTable/Resource
  GetUsersLambdaServiceRoleA2144AFC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Cdk2Stack/GetUsersLambda/ServiceRole/Resource
  GetUsersLambdaServiceRoleDefaultPolicy71D4E53F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - UserTableBD4BF69E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: GetUsersLambdaServiceRoleDefaultPolicy71D4E53F
      Roles:
        - Ref: GetUsersLambdaServiceRoleA2144AFC
    Metadata:
      aws:cdk:path: Cdk2Stack/GetUsersLambda/ServiceRole/DefaultPolicy/Resource
  GetUsersLambda4ACBBAFD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: UserTableBD4BF69E
      Handler: get-users.handler
      Role:
        Fn::GetAtt:
          - GetUsersLambdaServiceRoleA2144AFC
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - GetUsersLambdaServiceRoleDefaultPolicy71D4E53F
      - GetUsersLambdaServiceRoleA2144AFC
    Metadata:
      aws:cdk:path: Cdk2Stack/GetUsersLambda/Resource
      aws:asset:path: asset.2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  GetUserLambdaServiceRole15307360:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Cdk2Stack/GetUserLambda/ServiceRole/Resource
  GetUserLambdaServiceRoleDefaultPolicyFC935682:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - UserTableBD4BF69E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: GetUserLambdaServiceRoleDefaultPolicyFC935682
      Roles:
        - Ref: GetUserLambdaServiceRole15307360
    Metadata:
      aws:cdk:path: Cdk2Stack/GetUserLambda/ServiceRole/DefaultPolicy/Resource
  GetUserLambda881D1138:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: UserTableBD4BF69E
      Handler: get-user.handler
      Role:
        Fn::GetAtt:
          - GetUserLambdaServiceRole15307360
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - GetUserLambdaServiceRoleDefaultPolicyFC935682
      - GetUserLambdaServiceRole15307360
    Metadata:
      aws:cdk:path: Cdk2Stack/GetUserLambda/Resource
      aws:asset:path: asset.2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CreateUserLambdaServiceRoleAFE39E4A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Cdk2Stack/CreateUserLambda/ServiceRole/Resource
  CreateUserLambdaServiceRoleDefaultPolicyC1FA6D44:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - UserTableBD4BF69E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: CreateUserLambdaServiceRoleDefaultPolicyC1FA6D44
      Roles:
        - Ref: CreateUserLambdaServiceRoleAFE39E4A
    Metadata:
      aws:cdk:path: Cdk2Stack/CreateUserLambda/ServiceRole/DefaultPolicy/Resource
  CreateUserLambda0154A2EB:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: UserTableBD4BF69E
      Handler: create-user.handler
      Role:
        Fn::GetAtt:
          - CreateUserLambdaServiceRoleAFE39E4A
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - CreateUserLambdaServiceRoleDefaultPolicyC1FA6D44
      - CreateUserLambdaServiceRoleAFE39E4A
    Metadata:
      aws:cdk:path: Cdk2Stack/CreateUserLambda/Resource
      aws:asset:path: asset.2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  UpdateUserLambdaServiceRole3C5AB556:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Cdk2Stack/UpdateUserLambda/ServiceRole/Resource
  UpdateUserLambdaServiceRoleDefaultPolicy3539AF19:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - UserTableBD4BF69E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: UpdateUserLambdaServiceRoleDefaultPolicy3539AF19
      Roles:
        - Ref: UpdateUserLambdaServiceRole3C5AB556
    Metadata:
      aws:cdk:path: Cdk2Stack/UpdateUserLambda/ServiceRole/DefaultPolicy/Resource
  UpdateUserLambda9D1E8B10:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: UserTableBD4BF69E
      Handler: update-user.handler
      Role:
        Fn::GetAtt:
          - UpdateUserLambdaServiceRole3C5AB556
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - UpdateUserLambdaServiceRoleDefaultPolicy3539AF19
      - UpdateUserLambdaServiceRole3C5AB556
    Metadata:
      aws:cdk:path: Cdk2Stack/UpdateUserLambda/Resource
      aws:asset:path: asset.2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DeleteUserLambdaServiceRole5E37A90C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Cdk2Stack/DeleteUserLambda/ServiceRole/Resource
  DeleteUserLambdaServiceRoleDefaultPolicyCDE1D3BE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - UserTableBD4BF69E
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: DeleteUserLambdaServiceRoleDefaultPolicyCDE1D3BE
      Roles:
        - Ref: DeleteUserLambdaServiceRole5E37A90C
    Metadata:
      aws:cdk:path: Cdk2Stack/DeleteUserLambda/ServiceRole/DefaultPolicy/Resource
  DeleteUserLambdaF75E2C54:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: UserTableBD4BF69E
      Handler: delete-user.handler
      Role:
        Fn::GetAtt:
          - DeleteUserLambdaServiceRole5E37A90C
          - Arn
      Runtime: nodejs14.x
    DependsOn:
      - DeleteUserLambdaServiceRoleDefaultPolicyCDE1D3BE
      - DeleteUserLambdaServiceRole5E37A90C
    Metadata:
      aws:cdk:path: Cdk2Stack/DeleteUserLambda/Resource
      aws:asset:path: asset.2c24f6d4e6d448eaae5a90e1c347c746947959e8b9c8c3db77ba36b57e9337cd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  MyApi49610EDF:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MyApi
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Resource
  MyApiDeploymentECB0D05E1cbd76a87f0783f903a0553dee5f22cd:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: MyApi49610EDF
    DependsOn:
      - MyApiusersuserIdDELETEDC44C771
      - MyApiusersuserIdGET83981268
      - MyApiusersuserIdPUTB04DAEF7
      - MyApiusersuserId33866F04
      - MyApiusersGET0121E474
      - MyApiusersPOST4D577945
      - MyApiusersDA486006
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Deployment/Resource
  MyApiDeploymentStageprodE1054AF0:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: MyApiDeploymentECB0D05E1cbd76a87f0783f903a0553dee5f22cd
      RestApiId:
        Ref: MyApi49610EDF
      StageName: prod
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/DeploymentStage.prod/Resource
  MyApiusersDA486006:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - MyApi49610EDF
          - RootResourceId
      PathPart: users
      RestApiId:
        Ref: MyApi49610EDF
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/Resource
  MyApiusersGETApiPermissionCdk2StackMyApi7BFD9831GETusersC708E93A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetUsersLambda4ACBBAFD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /
            - Ref: MyApiDeploymentStageprodE1054AF0
            - /GET/users
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/GET/ApiPermission.Cdk2StackMyApi7BFD9831.GET..users
  MyApiusersGETApiPermissionTestCdk2StackMyApi7BFD9831GETusersB69528F8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetUsersLambda4ACBBAFD
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /test-invoke-stage/GET/users
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/GET/ApiPermission.Test.Cdk2StackMyApi7BFD9831.GET..users
  MyApiusersGET0121E474:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetUsersLambda4ACBBAFD
                  - Arn
              - /invocations
      ResourceId:
        Ref: MyApiusersDA486006
      RestApiId:
        Ref: MyApi49610EDF
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/GET/Resource
  MyApiusersPOSTApiPermissionCdk2StackMyApi7BFD9831POSTusers9BD0D038:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateUserLambda0154A2EB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /
            - Ref: MyApiDeploymentStageprodE1054AF0
            - /POST/users
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/POST/ApiPermission.Cdk2StackMyApi7BFD9831.POST..users
  MyApiusersPOSTApiPermissionTestCdk2StackMyApi7BFD9831POSTusers7C912FAC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - CreateUserLambda0154A2EB
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /test-invoke-stage/POST/users
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/POST/ApiPermission.Test.Cdk2StackMyApi7BFD9831.POST..users
  MyApiusersPOST4D577945:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - CreateUserLambda0154A2EB
                  - Arn
              - /invocations
      ResourceId:
        Ref: MyApiusersDA486006
      RestApiId:
        Ref: MyApi49610EDF
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/POST/Resource
  MyApiusersuserId33866F04:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: MyApiusersDA486006
      PathPart: "{userId}"
      RestApiId:
        Ref: MyApi49610EDF
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/Resource
  MyApiusersuserIdGETApiPermissionCdk2StackMyApi7BFD9831GETusersuserId19F5C1BB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetUserLambda881D1138
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /
            - Ref: MyApiDeploymentStageprodE1054AF0
            - /GET/users/*
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/GET/ApiPermission.Cdk2StackMyApi7BFD9831.GET..users.{userId}
  MyApiusersuserIdGETApiPermissionTestCdk2StackMyApi7BFD9831GETusersuserId5AB49751:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - GetUserLambda881D1138
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /test-invoke-stage/GET/users/*
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/GET/ApiPermission.Test.Cdk2StackMyApi7BFD9831.GET..users.{userId}
  MyApiusersuserIdGET83981268:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - GetUserLambda881D1138
                  - Arn
              - /invocations
      ResourceId:
        Ref: MyApiusersuserId33866F04
      RestApiId:
        Ref: MyApi49610EDF
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/GET/Resource
  MyApiusersuserIdPUTApiPermissionCdk2StackMyApi7BFD9831PUTusersuserIdC60ED350:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateUserLambda9D1E8B10
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /
            - Ref: MyApiDeploymentStageprodE1054AF0
            - /PUT/users/*
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/PUT/ApiPermission.Cdk2StackMyApi7BFD9831.PUT..users.{userId}
  MyApiusersuserIdPUTApiPermissionTestCdk2StackMyApi7BFD9831PUTusersuserId4CE2C161:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UpdateUserLambda9D1E8B10
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /test-invoke-stage/PUT/users/*
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/PUT/ApiPermission.Test.Cdk2StackMyApi7BFD9831.PUT..users.{userId}
  MyApiusersuserIdPUTB04DAEF7:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: PUT
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - UpdateUserLambda9D1E8B10
                  - Arn
              - /invocations
      ResourceId:
        Ref: MyApiusersuserId33866F04
      RestApiId:
        Ref: MyApi49610EDF
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/PUT/Resource
  MyApiusersuserIdDELETEApiPermissionCdk2StackMyApi7BFD9831DELETEusersuserIdD974F8D2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteUserLambdaF75E2C54
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /
            - Ref: MyApiDeploymentStageprodE1054AF0
            - /DELETE/users/*
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/DELETE/ApiPermission.Cdk2StackMyApi7BFD9831.DELETE..users.{userId}
  MyApiusersuserIdDELETEApiPermissionTestCdk2StackMyApi7BFD9831DELETEusersuserId553B8594:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - DeleteUserLambdaF75E2C54
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: MyApi49610EDF
            - /test-invoke-stage/DELETE/users/*
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/DELETE/ApiPermission.Test.Cdk2StackMyApi7BFD9831.DELETE..users.{userId}
  MyApiusersuserIdDELETEDC44C771:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - DeleteUserLambdaF75E2C54
                  - Arn
              - /invocations
      ResourceId:
        Ref: MyApiusersuserId33866F04
      RestApiId:
        Ref: MyApi49610EDF
    Metadata:
      aws:cdk:path: Cdk2Stack/MyApi/Default/users/{userId}/DELETE/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WPQW+DMAyFf0vvwVupNGnHlqm3aRXdvTLEZS4kQdgMIcR/nwid1p3eZ/v5JU5hm77C8wYHSUpbJw0XMJ0Vy9rgIJfJjh5dsAVMn1g0ZLKrjzCbBl1hEaZj70vl4JfRI5+ocyzCwc+G0cGUh3U/6ik0XI7RF2k2srugCKnAfhEjOzj0ZU16QCGDLVeoNOAIU06i+5Zj1h3fqG3C6Mjr0n2ozopVfHWFnCT0XUkx87e4B638TvoV7NJaaZ7/fPFjSxD7anF89Nr2+m89u/oseMsa7/bBEtzk6Tvdwgukm5swJ13vlR1BvuoPwHJDtYIBAAA=
    Metadata:
      aws:cdk:path: Cdk2Stack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  MyApiEndpoint869ABE96:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: MyApi49610EDF
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: MyApiDeploymentStageprodE1054AF0
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

